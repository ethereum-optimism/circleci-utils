description: >
  Checkout then initialize the mise environment.
parameters:
  checkout-branch:
    type: string
    default: "$CIRCLE_BRANCH"
  submodules:
    type: boolean
    default: false
    description: Whether to initialize and update git submodules recursively
steps:
  - checkout
  - when:
      condition: << parameters.submodules >>
      steps:
        - run:
            name: Initialize and Update Submodules
            command: |
              git submodule sync --recursive
              git submodule update --init --recursive --depth 1
  - run:
      name: Initialize mise environment
      command: |
        if [[ "$checkout-branch" != "$CIRCLE_BRANCH" ]]; then
          git checkout "$checkout-branch"
        fi

        # This is used to create a per-user cache key to preserve permissions across different
        # executor types.
        user=$(whoami)
        echo "$user" > .executor-user
        echo "Set executor user to $user."

        if [[ "$user" == "root" ]]; then
          # Self-hosted runners will persist this cache between runs. Cleaning it up means that we
          # preserve the semantics of the cache regardless of executor type. It's also much faster
          # to delete the cache and recreate it than it is to overwrite it in place.
          rm -rf /data/mise-data
          echo "Cleaned up cache data."

          mkdir -p /data/mise-data
          echo "Created Mise data dir."
          mkdir -p ~/.cache
          echo "Created Mise cache dir."
        else
          sudo rm -rf /data/mise-data
          echo "Cleaned up cache data."
          sudo mkdir -p /data/mise-data
          sudo chown -R "$user:$user" /data/mise-data
          echo "Created Mise data dir."
          sudo mkdir -p ~/.cache
          sudo chown -R "$user:$user" ~/.cache
          echo "Created Mise cache dir."
        fi
  - restore_cache:
      name: Restore mise cache
      keys:
        - mise-v5-{{ checksum ".executor-user" }}-{{ checksum "mise.toml" }}
  - run:
      name: Install mise
      command: <<include(scripts/install_mise.sh)>>
  - run:
      name: Configure mise environment
      command: |
        echo "export PATH=\"$HOME/.local/bin:\$PATH\"" >> "$BASH_ENV"
        echo "export MISE_DATA_DIR=/data/mise-data" >> "$BASH_ENV"
        echo "export MISE_JOBS=$(nproc)" >> "$BASH_ENV"
        echo "eval \"\$($HOME/.local/bin/mise activate --shims)\"" >> "$BASH_ENV"
        # install rust artifacts where they'll be cached
        echo "export MISE_CARGO_HOME=\${MISE_DATA_DIR}/.cargo" >> "$BASH_ENV"
        echo "export MISE_RUSTUP_HOME=\${MISE_DATA_DIR}/.rustup" >> "$BASH_ENV"
  - run:
      name: Install mise deps
      command: |
        mise install -v -y
  - save_cache:
      name: Save mise cache
      key: mise-v5-{{ checksum ".executor-user" }}-{{ checksum "mise.toml" }}
      paths:
        - /data/mise-data
  - run:
      name: Delete executor file
      command: |
        rm -f .executor-user
