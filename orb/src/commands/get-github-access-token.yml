description: >
  This command will get a GitHub Access Token using the GitHub App's private key.
parameters:
  private-key-str:
    type: env_var_name
    default: GITHUB_APP_KEY
    description: "The GitHub App's private key"
  app-id:
    type: env_var_name
    default: GITHUB_APP_ID
    description: "The GitHub App ID"
  repo:
    type: string
    description: "The repository to get the token for"
  output-token-name:
    type: string
    default: GITHUB_APP_TOKEN
    description: "The name of the environment variable to store the token in"
  condition:
    type: string
    default: "always"
    description: "The condition to run the command. 0 and always are considered true, everything else is false"
steps:
  - setup-circleci-utils
  - run:
      name: Get GitHub Access Token
      command: |
        if [ "<< parameters.condition >>" != "always" ] && [ "<< parameters.condition >>" != "0" ]; then
          echo "Skipping command because condition is not met"
          exit 0
        fi

        token=$(python $CIRCLECI_TOOLS_PATH get-github-access-token --private-key-str="${<< parameters.private-key-str >>}" --app-id="${<< parameters.app-id >>}" --repo "<< parameters.repo >>")
        echo "export << parameters.output-token-name >>=${token}" >> $BASH_ENV
        #if the token is not set, fail the build
        if [ -z "${token}" ]; then
          echo "Failed to get GitHub Access Token"
          exit 1
        else 
          echo "Successfully got GitHub Access Token"
        fi
